resource_types:
- name: cf-cli-resource
  type: docker-image
  source:
    repository: nulldriver/cf-cli-resource
    tag: latest
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: pcf
  type: cf
  source:
    api: ((cf-api))
    username: ((cf-user))
    password: ((cf-password))
    organization: ((cf-org))
    space: ((cf-space))
- name: team-survey
  type: git
  source:
    uri: ((git-repo-uri))
    private_key: ((git-private-key))
- name: cf-env
  type: cf-cli-resource
  source:
    api: ((cf-api))
    username: ((cf-user))
    password: ((cf-password))
    skip_cert_check: true
- name: slack
  type: slack-notification
  source:
    url: ((slack-hook-url))
- name: weekly
  type: time
  source: {interval: 168h}

jobs:
- name: test
  plan:
  - aggregate:
    - get: weekly
      trigger: true
    - get: team-survey
      trigger: true
  - aggregate:
    - task: unit-test
      file: team-survey/ci/tasks/unit-test/unit-test.yml
    - task: golangci-lint
      file: team-survey/ci/tasks/golangci-lint/golangci-lint.yml
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME

- name: dev-environment-create
  serial: true
  public: true
  serial_groups: [dev-environment-destroy]
  plan:
    - aggregate:
      - get: weekly
        trigger: true
      - get: cf-env
      - get: team-survey
        trigger: true
        passed:
          - test
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: elephantsql
        plan: turtle
        service_instance: elephantsql-dev
        configuration: '{"count":1}'
        timeout: 300
        wait_for_service: true
        org: ((cf-org))
        space: ((cf-space))
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME

- name: deploy-dev
  serial: true
  public: true
  serial_groups: [dev-environment-destroy]
  plan:
    - aggregate:
      - get: weekly
        trigger: true
        passed:
          - dev-environment-create
      - get: cf-env
        trigger: true
        passed:
          - dev-environment-create
      - get: team-survey
        trigger: true
        passed:
          - dev-environment-create
    - put: pcf
      params:
        manifest: team-survey/manifest-dev.yml
        current_app_name: team-survey-dev
        path: team-survey
        environment_variables:
          DISABLE_AUTH: "True"
          GOOGLE_CLIENT_ID: "foobar"
          GOOGLE_CLIENT_SECRET: "foobar"
          APP_URL: ((team-survey-dev-url))
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME

- name: smoke-test
  serial: true
  public: true
  serial_groups: [dev-environment-destroy]
  plan:
    - aggregate:
      - get: weekly
        trigger: true
        passed:
          - deploy-dev
      - get: team-survey
        trigger: true
        passed:
          - deploy-dev
      - get: pcf
        trigger: true
        passed:
          - deploy-dev
    - task: cypress-test
      file: team-survey/ci/tasks/smoke-test/cypress.yml
      params:
        HOST: ((team-survey-dev-url))
        API_SERVER: ((team-survey-dev-api-url))
        ADMIN_USERNAME: ((team-survey-admin-username))
        ADMIN_PASSWORD: ((team-survey-admin-password))
        CYPRESS_RECORD_KEY: ((cypress-record-key))
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME

- name: dev-environment-destroy
  serial: true
  public: true
  plan:
    - aggregate:
      - get: weekly
        trigger: true
        passed:
          - smoke-test
      - get: cf-env
        trigger: true
        passed:
          - deploy-dev
      - get: pcf
        trigger: true
        passed:
          - smoke-test
    - put: cf-stop
      resource: cf-env
      params:
        command: stop
        app_name: ((cf-app-name-dev))
        org: ((cf-org))
        space: ((cf-space))
    - task: configure
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: ubuntu
        run:
          path: bash
          args:
          - -excl
          - |-
            cat > cf_command/params.yml <<EOF
            command: delete
            app_name: ((cf-app-name-dev))
            org: ((cf-org))
            space: ((cf-space))
            delete_mapped_routes: true
            EOF
        outputs:
          - name: cf_command
    - put: cf-delete
      resource: cf-env
      params:
        command: delete
        command_file: cf_command/params.yml
    - put: cf-delete-service
      resource: cf-env
      params:
        command: delete-service
        service_instance: elephantsql-dev
        wait_for_service: true
        org: ((cf-org))
        space: ((cf-space))
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME

- name: prod-environment-create
  serial: true
  public: true
  plan:
    - aggregate:
      - get: weekly
        trigger: true
      - get: cf-env
      - get: team-survey
        trigger: true
        passed:
          - smoke-test
    - put: cf-create-service
      resource: cf-env
      params:
        command: create-service
        service: elephantsql
        plan: turtle
        service_instance: elephantsql-prod
        configuration: '{"count":1}'
        timeout: 300
        wait_for_service: true
        org: ((cf-org))
        space: ((cf-space))
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME

- name: deploy
  serial: true
  public: true
  plan:
    - aggregate:
      - get: weekly
        trigger: true
        passed:
          - prod-environment-create
      - get: cf-env
        trigger: true
        passed:
          - prod-environment-create
      - get: team-survey
        trigger: true
        passed:
          - prod-environment-create
    - put: pcf
      params:
        manifest: team-survey/manifest.yml
        current_app_name: ((cf-app-name-prod))
        path: team-survey
        environment_variables:
          GOOGLE_CLIENT_ID: ((google-client-id))
          GOOGLE_CLIENT_SECRET: ((google-client-secret))
          APP_URL: ((team-survey-url))
          CREATE_SURVEY_ACCESS_TOKEN: ((create-survey-access-token))
  on_failure:
    put: slack
    params:
      text: |
        The build has failed at $BUILD_JOB_NAME on $BUILD_PIPELINE_NAME
